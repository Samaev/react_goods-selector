{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","selectGood","good","setState","removeGood","filter","choosen","clearBasket","this","className","map","classNames","listOfGoods__item","includes","type","onClick","join","length","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAyB,CACvBC,MAAOH,EACPI,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBE,cAAc,GAAD,mBAAMF,EAAME,eAAZ,CAA2BE,S,EAI5CE,WAAa,SAACF,GACZ,EAAKC,UAAS,kBAAwB,CACpCH,cADY,EAAGA,cACcK,QAAO,SAAAC,GAAO,OAAIA,IAAYJ,U,EAI/DK,YAAc,WACZ,EAAKJ,SAAS,CACZH,cAAe,M,4CAInB,WAAU,IAAD,OACP,EAAiCQ,KAAKV,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,qBAAKS,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGV,EAAMW,KAAI,SAAAR,GAAI,OACb,qBAEEO,UAAWE,IAAW,CACpBC,mBAAmB,EACnB,4BAA6BZ,EAAca,SAASX,KAJxD,UAOE,sBAAMO,UAAU,OAAhB,SACGP,IAEFF,EAAca,SAASX,GAEpB,wBACEO,UAAU,iBACVK,KAAK,SACLC,QAAS,kBAAM,EAAKX,WAAWF,IAHjC,oBASA,wBACEO,UAAU,oBACVK,KAAK,SACLC,QAAS,kBAAM,EAAKd,WAAWC,IAHjC,sBApBCA,QA+BX,oBAAIO,UAAU,gBAAd,mBAAkCT,EAAcgB,KAAK,OAAS,UAA9D,YAA4EhB,EAAciB,OAAS,EAAK,MAAQ,KAAhH,eAC0B,IAAzBjB,EAAciB,QACb,wBACER,UAAU,8BACVK,KAAK,SACLC,QAASP,KAAKD,YAHhB,4B,GAlEMW,aAgFHrB,ICnGfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0cb26fd8.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  selectedGoods: string[],\n};\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    goods: goodsFromServer,\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: selectedGoods.filter(choosen => choosen !== good),\n    }));\n  };\n\n  clearBasket = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"goodsSelector\">\n          <ul className=\"listOfGoods box\">\n            {goods.map(good => (\n              <li\n                key={good}\n                className={classNames({\n                  listOfGoods__item: true,\n                  'listOfGoods__item--active': selectedGoods.includes(good),\n                })}\n              >\n                <span className=\"good\">\n                  {good}\n                </span>\n                {selectedGoods.includes(good)\n                  ? (\n                    <button\n                      className=\"button is-info\"\n                      type=\"button\"\n                      onClick={() => this.removeGood(good)}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      className=\"button is-primary\"\n                      type=\"button\"\n                      onClick={() => this.selectGood(good)}\n                    >\n                      Select\n                    </button>\n                  )}\n              </li>\n            ))}\n          </ul>\n          <h1 className=\"subtitle is-3\">{`${selectedGoods.join(', ') || 'Nothing'} ${(selectedGoods.length > 1) ? 'are' : 'is'} selected`}</h1>\n          {selectedGoods.length !== 0 && (\n            <button\n              className=\"button is-danger is-rounded\"\n              type=\"button\"\n              onClick={this.clearBasket}\n            >\n              Clear\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}